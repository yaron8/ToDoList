package com.yaron.todo;

//import java.util.ArrayList;
import java.io.IOException;
import java.util.Calendar;
import java.util.List;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesClient;
import com.google.android.gms.common.GooglePlayServicesUtil;
import com.google.android.gms.location.Geofence;
import com.google.android.gms.location.LocationClient;
import com.google.android.gms.location.LocationClient.OnAddGeofencesResultListener;
import com.yaron.DB.DataHandler;
import com.yaron.DB.DataHandler.OPEN_DB_FOR;
import com.yaron.NotificationAlarm.AlarmReciever;
import com.yaron.NotificationAlarm.CustomAlarmNotification;
//import com.yaron.NotificationBar.CustomNotification;
//import com.yaron.NotificationBar.AdapterExtraIntent;

import android.app.Activity;
import android.app.Notification;
import android.content.Intent;
import android.database.Cursor;
import android.location.Address;
import android.location.Geocoder;
import android.media.RingtoneManager;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.TimePicker;
//import android.widget.Toast;
import android.widget.Toast;

public class AddToDo extends Activity implements OnAddGeofencesResultListener, GooglePlayServicesClient.ConnectionCallbacks, GooglePlayServicesClient.OnConnectionFailedListener {

	LocationClient geoLocationClient;
	private int google_play_result_code;
    public String monitoredLounges = "";
    private Address address=null;
    
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_add_to_do);
		
		final Button btn_send = (Button) findViewById(R.id.btn_send);
		final EditText etxt_todo_to_add = (EditText) findViewById(R.id.etxt_todo_to_add);
		final EditText etxt_location_geofence = (EditText) findViewById(R.id.etxt_location_geofence);
		

        google_play_result_code = GooglePlayServicesUtil.isGooglePlayServicesAvailable(this);
		if(google_play_result_code == ConnectionResult.SUCCESS) {
            geoLocationClient = new LocationClient(this, this, this);
            // when I'm using connect() in order to addgeofences my application stops unexpectedly
            geoLocationClient.connect();
            
		}
		
		btn_send.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				if(!etxt_todo_to_add.getText().toString().equals("")) {
					Calendar cal = Calendar.getInstance();
					DatePicker dpcr = (DatePicker) findViewById(R.id.dpcr_date_select);
					TimePicker tpcr = (TimePicker) findViewById(R.id.tpcr_time_select);
					tpcr.clearFocus();
					
					
					//cal.set(dpcr.getYear(), dpcr.getMonth(), dpcr.getDayOfMonth(), tpcr.getCurrentHour(), tpcr.getCurrentMinute());
					cal.set(Calendar.MONTH, dpcr.getMonth());
					cal.set(Calendar.DAY_OF_MONTH, dpcr.getDayOfMonth());
					cal.set(Calendar.YEAR, dpcr.getYear());
					cal.set(Calendar.HOUR_OF_DAY, tpcr.getCurrentHour());
					cal.set(Calendar.MINUTE, tpcr.getCurrentMinute());
					
					DataHandler db = new DataHandler(getBaseContext());
					db.open(OPEN_DB_FOR.WRITE);
					db.insertData(etxt_todo_to_add.getText().toString(), cal);
					
					Cursor cursor = db.returnData("select * from "+DataHandler._TABLE_NAME+" order by ID DESC LIMIT 1");
					cursor.moveToFirst();
					Intent intent = new Intent(getBaseContext(), EditItem.class);
					intent.putExtra("todo_id", cursor.getString(cursor.getColumnIndex("ID")));
					intent.putExtra("msg", cursor.getString(cursor.getColumnIndex("msg")));
			        
					CustomAlarmNotification custom_alarm = new CustomAlarmNotification(getBaseContext(), AlarmReciever.class);
					custom_alarm.createAlarm(EditItem.class, intent, cal.get(Calendar.DAY_OF_MONTH), cal.get(Calendar.MONTH), cal.get(Calendar.YEAR), cal.get(Calendar.HOUR_OF_DAY), cal.get(Calendar.MINUTE), 0);
					
					if(google_play_result_code == ConnectionResult.SUCCESS) {
						Geofence geofence = new Geofence.Builder()
		                .setRequestId("new reminder")
		                .setTransitionTypes(Geofence.GEOFENCE_TRANSITION_ENTER | Geofence.GEOFENCE_TRANSITION_EXIT)
		                .setCircularRegion(address.getLatitude(), address.getLongitude(), (float) 500.00)
		                .setExpirationDuration(Geofence.NEVER_EXPIRE)
		                .build();
						address.getLatitude();
					}
					
					
					//custom_alarm.cancelAlarm(EditItem.class, Integer.parseInt(cursor.getString(cursor.getColumnIndex("ID"))));
					/*
					CustomNotification noti = new CustomNotification(getBaseContext(), intent);
					noti.setContentTitle("con title");
					noti.setIcon(R.drawable.ic_launcher);
					noti.setText("baba");
					noti.setTitle("my title");
					noti.create();
					noti.show();
					*/
					db.close();
					finish();
					AddToDo.this.overridePendingTransition(R.animator.animation_right_to_left1, R.animator.animation_right_to_left2); 
				}
			}
		});
		
		
		etxt_location_geofence.addTextChangedListener(new TextWatcher() {
			
			@Override
			public void onTextChanged(CharSequence s, int start, int before, int count) {

		        if (google_play_result_code == ConnectionResult.SUCCESS) {
		            Geocoder geocoder = new Geocoder(getBaseContext());
					try {
						List<Address> address_list = geocoder.getFromLocationName(s.toString(), 1);
						if(!address_list.isEmpty()) {
							address = address_list.get(0);
							//Toast.makeText(getApplicationContext(), String.valueOf(address.getLatitude()), Toast.LENGTH_SHORT).show();
						}
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		        }
			}
			
			@Override
			public void beforeTextChanged(CharSequence s, int start, int count,
					int after) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void afterTextChanged(Editable s) {
				// TODO Auto-generated method stub
				
			}
		});
	}

    @Override
    public void onBackPressed() {
        super.onBackPressed();
        overridePendingTransition(R.animator.animation_right_to_left1, R.animator.animation_right_to_left2);   
    }
    
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.add_to_do, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	@Override
	public void onConnectionFailed(ConnectionResult arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onConnected(Bundle arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onDisconnected() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onAddGeofencesResult(int arg0, String[] arg1) {
		// TODO Auto-generated method stub
		
	}
}
